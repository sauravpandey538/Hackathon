"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n\n\n// Define role-based route mappings with exact paths\nconst roleRoutes = {\n    admin: [\n        \"/admin\"\n    ],\n    teacher: [\n        \"/teacher\"\n    ],\n    student: [\n        \"/student\"\n    ]\n};\n// Define public routes that don't require authentication\nconst publicRoutes = [\n    \"/\",\n    \"/admin/auth/login\",\n    \"/admin/auth/signup\",\n    \"/teacher/auth/login\",\n    \"/student/auth/login\",\n    \"/api/auth/login\",\n    \"/api/auth/signup\",\n    \"/api/user/me\"\n];\n// Define API routes that require authentication\nconst protectedApiRoutes = [\n    \"/api/teachers\",\n    \"/api/students\",\n    \"/api/routines\"\n];\nasync function middleware(request) {\n    const url = request.nextUrl;\n    const pathname = url.pathname;\n    // Allow public routes without authentication\n    if (publicRoutes.some((route)=>pathname === route || pathname.startsWith(route + \"/\"))) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n    }\n    // Get the token from cookies\n    const token = request.cookies.get(\"token\")?.value;\n    // If no token is present, redirect to login\n    if (!token) {\n        const redirectUrl = new URL(\"/admin/auth/login\", request.url);\n        redirectUrl.searchParams.set(\"redirect\", pathname + url.search);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(redirectUrl);\n    }\n    try {\n        // Verify the token\n        const secret = new TextEncoder().encode(process.env.JWT_SECRET);\n        const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtVerify)(token, secret);\n        // Extract user role from token\n        const userRole = payload.role;\n        // Get the first path segment to determine the route type\n        const firstPathSegment = pathname.split(\"/\")[1];\n        // Check if the user is trying to access a route for their role\n        const isAllowedRoute = firstPathSegment === userRole;\n        // If trying to access a route not for their role, redirect to their dashboard\n        if (!isAllowedRoute) {\n            const dashboardRoute = `/${userRole}/dashboard`;\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(dashboardRoute, request.url));\n        }\n        // For API routes, add the user role to the request headers\n        if (pathname.startsWith(\"/api\") && protectedApiRoutes.some((route)=>pathname.startsWith(route))) {\n            const requestHeaders = new Headers(request.headers);\n            requestHeaders.set(\"x-user-role\", userRole);\n            requestHeaders.set(\"x-user-id\", payload.sub);\n            // Return a new response with the modified headers\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next({\n                request: {\n                    headers: requestHeaders\n                }\n            });\n        }\n        // Allow access to the requested route\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n    } catch (error) {\n        // Token is invalid or expired\n        console.error(\"Token validation error:\", error);\n        // Clear the invalid token\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/admin/auth/login\", request.url));\n        response.cookies.delete(\"token\");\n        return response;\n    }\n}\n// Configure which routes the middleware should run on\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except:\n     * 1. /_next/ (Next.js internals)\n     * 2. /_static (inside /public)\n     * 3. /_vercel (Vercel internals)\n     * 4. /favicon.ico, /sitemap.xml (static files)\n     */ \"/((?!_next|_static|_vercel|favicon.ico|sitemap.xml).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O0FBQy9DLE1BQU1FLFNBQVM7SUFDcEJDLFNBQVM7UUFDUDs7Ozs7O0tBTUMsR0FDRDtLQUNEO0FBQ0gsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbWlkZGxld2FyZS50cz9kMTk5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IGp3dFZlcmlmeSB9IGZyb20gJ2pvc2UnXG5cbi8vIERlZmluZSByb2xlLWJhc2VkIHJvdXRlIG1hcHBpbmdzIHdpdGggZXhhY3QgcGF0aHNcbmNvbnN0IHJvbGVSb3V0ZXMgPSB7XG4gIGFkbWluOiBbJy9hZG1pbiddLFxuICB0ZWFjaGVyOiBbJy90ZWFjaGVyJ10sXG4gIHN0dWRlbnQ6IFsnL3N0dWRlbnQnXSxcbn1cblxuLy8gRGVmaW5lIHB1YmxpYyByb3V0ZXMgdGhhdCBkb24ndCByZXF1aXJlIGF1dGhlbnRpY2F0aW9uXG5jb25zdCBwdWJsaWNSb3V0ZXMgPSBbXG4gICcvJyxcbiAgJy9hZG1pbi9hdXRoL2xvZ2luJyxcbiAgJy9hZG1pbi9hdXRoL3NpZ251cCcsXG4gICcvdGVhY2hlci9hdXRoL2xvZ2luJyxcbiAgJy9zdHVkZW50L2F1dGgvbG9naW4nLFxuICAnL2FwaS9hdXRoL2xvZ2luJyxcbiAgJy9hcGkvYXV0aC9zaWdudXAnLFxuICAnL2FwaS91c2VyL21lJ1xuXVxuXG4vLyBEZWZpbmUgQVBJIHJvdXRlcyB0aGF0IHJlcXVpcmUgYXV0aGVudGljYXRpb25cbmNvbnN0IHByb3RlY3RlZEFwaVJvdXRlcyA9IFtcbiAgJy9hcGkvdGVhY2hlcnMnLFxuICAnL2FwaS9zdHVkZW50cycsXG4gICcvYXBpL3JvdXRpbmVzJyxcbl1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgdXJsID0gcmVxdWVzdC5uZXh0VXJsXG4gIGNvbnN0IHBhdGhuYW1lID0gdXJsLnBhdGhuYW1lXG4gIFxuICAvLyBBbGxvdyBwdWJsaWMgcm91dGVzIHdpdGhvdXQgYXV0aGVudGljYXRpb25cbiAgaWYgKHB1YmxpY1JvdXRlcy5zb21lKHJvdXRlID0+IHBhdGhuYW1lID09PSByb3V0ZSB8fCBwYXRobmFtZS5zdGFydHNXaXRoKHJvdXRlICsgJy8nKSkpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKVxuICB9XG4gIFxuICAvLyBHZXQgdGhlIHRva2VuIGZyb20gY29va2llc1xuICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuY29va2llcy5nZXQoJ3Rva2VuJyk/LnZhbHVlXG4gIFxuICAvLyBJZiBubyB0b2tlbiBpcyBwcmVzZW50LCByZWRpcmVjdCB0byBsb2dpblxuICBpZiAoIXRva2VuKSB7XG4gICAgY29uc3QgcmVkaXJlY3RVcmwgPSBuZXcgVVJMKCcvYWRtaW4vYXV0aC9sb2dpbicsIHJlcXVlc3QudXJsKVxuICAgIHJlZGlyZWN0VXJsLnNlYXJjaFBhcmFtcy5zZXQoJ3JlZGlyZWN0JywgcGF0aG5hbWUgKyB1cmwuc2VhcmNoKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QocmVkaXJlY3RVcmwpXG4gIH1cbiAgXG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoZSB0b2tlblxuICAgIGNvbnN0IHNlY3JldCA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShwcm9jZXNzLmVudi5KV1RfU0VDUkVUISlcbiAgICBjb25zdCB7IHBheWxvYWQgfSA9IGF3YWl0IGp3dFZlcmlmeSh0b2tlbiwgc2VjcmV0KVxuICAgIFxuICAgIC8vIEV4dHJhY3QgdXNlciByb2xlIGZyb20gdG9rZW5cbiAgICBjb25zdCB1c2VyUm9sZSA9IHBheWxvYWQucm9sZSBhcyBzdHJpbmdcbiAgICBcbiAgICAvLyBHZXQgdGhlIGZpcnN0IHBhdGggc2VnbWVudCB0byBkZXRlcm1pbmUgdGhlIHJvdXRlIHR5cGVcbiAgICBjb25zdCBmaXJzdFBhdGhTZWdtZW50ID0gcGF0aG5hbWUuc3BsaXQoJy8nKVsxXVxuICAgIFxuICAgIC8vIENoZWNrIGlmIHRoZSB1c2VyIGlzIHRyeWluZyB0byBhY2Nlc3MgYSByb3V0ZSBmb3IgdGhlaXIgcm9sZVxuICAgIGNvbnN0IGlzQWxsb3dlZFJvdXRlID0gZmlyc3RQYXRoU2VnbWVudCA9PT0gdXNlclJvbGVcbiAgICBcbiAgICAvLyBJZiB0cnlpbmcgdG8gYWNjZXNzIGEgcm91dGUgbm90IGZvciB0aGVpciByb2xlLCByZWRpcmVjdCB0byB0aGVpciBkYXNoYm9hcmRcbiAgICBpZiAoIWlzQWxsb3dlZFJvdXRlKSB7XG4gICAgICBjb25zdCBkYXNoYm9hcmRSb3V0ZSA9IGAvJHt1c2VyUm9sZX0vZGFzaGJvYXJkYFxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGRhc2hib2FyZFJvdXRlLCByZXF1ZXN0LnVybCkpXG4gICAgfVxuICAgIFxuICAgIC8vIEZvciBBUEkgcm91dGVzLCBhZGQgdGhlIHVzZXIgcm9sZSB0byB0aGUgcmVxdWVzdCBoZWFkZXJzXG4gICAgaWYgKHBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hcGknKSAmJiBwcm90ZWN0ZWRBcGlSb3V0ZXMuc29tZShyb3V0ZSA9PiBwYXRobmFtZS5zdGFydHNXaXRoKHJvdXRlKSkpIHtcbiAgICAgIGNvbnN0IHJlcXVlc3RIZWFkZXJzID0gbmV3IEhlYWRlcnMocmVxdWVzdC5oZWFkZXJzKVxuICAgICAgcmVxdWVzdEhlYWRlcnMuc2V0KCd4LXVzZXItcm9sZScsIHVzZXJSb2xlKVxuICAgICAgcmVxdWVzdEhlYWRlcnMuc2V0KCd4LXVzZXItaWQnLCBwYXlsb2FkLnN1YiBhcyBzdHJpbmcpXG4gICAgICBcbiAgICAgIC8vIFJldHVybiBhIG5ldyByZXNwb25zZSB3aXRoIHRoZSBtb2RpZmllZCBoZWFkZXJzXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoe1xuICAgICAgICByZXF1ZXN0OiB7XG4gICAgICAgICAgaGVhZGVyczogcmVxdWVzdEhlYWRlcnMsXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgIH1cbiAgICBcbiAgICAvLyBBbGxvdyBhY2Nlc3MgdG8gdGhlIHJlcXVlc3RlZCByb3V0ZVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gVG9rZW4gaXMgaW52YWxpZCBvciBleHBpcmVkXG4gICAgY29uc29sZS5lcnJvcignVG9rZW4gdmFsaWRhdGlvbiBlcnJvcjonLCBlcnJvcilcbiAgICBcbiAgICAvLyBDbGVhciB0aGUgaW52YWxpZCB0b2tlblxuICAgIGNvbnN0IHJlc3BvbnNlID0gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9hZG1pbi9hdXRoL2xvZ2luJywgcmVxdWVzdC51cmwpKVxuICAgIHJlc3BvbnNlLmNvb2tpZXMuZGVsZXRlKCd0b2tlbicpXG4gICAgXG4gICAgcmV0dXJuIHJlc3BvbnNlXG4gIH1cbn1cblxuLy8gQ29uZmlndXJlIHdoaWNoIHJvdXRlcyB0aGUgbWlkZGxld2FyZSBzaG91bGQgcnVuIG9uXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBtYXRjaGVyOiBbXG4gICAgLypcbiAgICAgKiBNYXRjaCBhbGwgcmVxdWVzdCBwYXRocyBleGNlcHQ6XG4gICAgICogMS4gL19uZXh0LyAoTmV4dC5qcyBpbnRlcm5hbHMpXG4gICAgICogMi4gL19zdGF0aWMgKGluc2lkZSAvcHVibGljKVxuICAgICAqIDMuIC9fdmVyY2VsIChWZXJjZWwgaW50ZXJuYWxzKVxuICAgICAqIDQuIC9mYXZpY29uLmljbywgL3NpdGVtYXAueG1sIChzdGF0aWMgZmlsZXMpXG4gICAgICovXG4gICAgJy8oKD8hX25leHR8X3N0YXRpY3xfdmVyY2VsfGZhdmljb24uaWNvfHNpdGVtYXAueG1sKS4qKScsXG4gIF0sXG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiand0VmVyaWZ5Iiwicm9sZVJvdXRlcyIsImFkbWluIiwidGVhY2hlciIsInN0dWRlbnQiLCJwdWJsaWNSb3V0ZXMiLCJwcm90ZWN0ZWRBcGlSb3V0ZXMiLCJtaWRkbGV3YXJlIiwicmVxdWVzdCIsInVybCIsIm5leHRVcmwiLCJwYXRobmFtZSIsInNvbWUiLCJyb3V0ZSIsInN0YXJ0c1dpdGgiLCJuZXh0IiwidG9rZW4iLCJjb29raWVzIiwiZ2V0IiwidmFsdWUiLCJyZWRpcmVjdFVybCIsIlVSTCIsInNlYXJjaFBhcmFtcyIsInNldCIsInNlYXJjaCIsInJlZGlyZWN0Iiwic2VjcmV0IiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsInBheWxvYWQiLCJ1c2VyUm9sZSIsInJvbGUiLCJmaXJzdFBhdGhTZWdtZW50Iiwic3BsaXQiLCJpc0FsbG93ZWRSb3V0ZSIsImRhc2hib2FyZFJvdXRlIiwicmVxdWVzdEhlYWRlcnMiLCJIZWFkZXJzIiwiaGVhZGVycyIsInN1YiIsImVycm9yIiwiY29uc29sZSIsInJlc3BvbnNlIiwiZGVsZXRlIiwiY29uZmlnIiwibWF0Y2hlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});